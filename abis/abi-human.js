[
  "function accessControlBatchSetWhitelistAddresses(address[] _addresses, bool _isWhitelisted)",
  "function accessControlGetPaused() view returns (bool)",
  "function accessControlGetWhitelistAddress(address _address) view returns (bool)",
  "function accessControlGetWhitelistOnly() view returns (bool)",
  "function accessControlSetPaused(bool _paused)",
  "function accessControlSetWhitelistAddress(address _address, bool _isWhitelisted)",
  "function accessControlSetWhitelistOnly(bool _whitelistOnly)",
  "function accessControlStatus(address _address) view returns (bool _paused, bool _whitelistOnly, bool _isWhitelisted)",
  "function airdrop(address[] recipients)",
  "function approve(address to, uint256 tokenId)",
  "function balanceOf(address owner) view returns (uint256)",
  "function contractURI() pure returns (string)",
  "function diamondCut(tuple(address facetAddress, uint8 action, bytes4[] functionSelectors)[] _diamondCut, address _init, bytes _calldata)",
  "function exists(uint256 tokenId) view returns (bool)",
  "function facetAddress(bytes4 _functionSelector) view returns (address facetAddress_)",
  "function facetAddresses() view returns (address[] facetAddresses_)",
  "function facetFunctionSelectors(address _facet) view returns (bytes4[] facetFunctionSelectors_)",
  "function facets() view returns (tuple(address facetAddress, bytes4[] functionSelectors)[] facets_)",
  "function getApproved(uint256 tokenId) view returns (address)",
  "function getLeaderboard(uint256 startId, uint256 endId) view returns (tuple(uint256 landId, uint256 experiencePoints, string name)[] leaderboard)",
  "function initNFTFacet()",
  "function initializeMarketplace()",
  "function isApprovedForAll(address owner, address operator) view returns (bool)",
  "function landGetBoundaries() view returns (int256 minX, int256 maxX, int256 minY, int256 maxY)",
  "function landGetById(uint256 tokenId) view returns (tuple(uint256 tokenId, string tokenUri, uint256 mintDate, address owner, string name, int256 coordinateX, int256 coordinateY, uint256 experiencePoints, uint256 accumulatedPlantPoints, uint256 accumulatedPlantLifetime, uint8 farmerAvatar) land)",
  "function landGetByOwner(address owner) view returns (tuple(uint256 tokenId, string tokenUri, uint256 mintDate, address owner, string name, int256 coordinateX, int256 coordinateY, uint256 experiencePoints, uint256 accumulatedPlantPoints, uint256 accumulatedPlantLifetime, uint8 farmerAvatar)[] lands)",
  "function landGetCoordinates(uint256 tokenId) view returns (int256 x, int256 y, bool occupied)",
  "function landGetMintPrice() view returns (uint256)",
  "function landGetTokenIdByCoordinates(int256 x, int256 y) view returns (uint256 tokenId)",
  "function landOverviewByOwner(address owner) view returns (tuple(uint256 tokenId, int256 coordinateX, int256 coordinateY, string name)[])",
  "function landSetName(uint256 tokenId, string name)",
  "function marketPlaceCancelOrder(uint256 landId, uint256 orderId)",
  "function marketPlaceCreateOrder(uint256 landId, uint8 sellToken, uint256 amount, uint256 amountAsk)",
  "function marketPlaceGetActiveOrders() view returns (tuple(uint256 id, address seller, uint8 sellToken, uint256 amount, bool isActive, uint256 amountAsk)[])",
  "function marketPlaceGetInactiveOrders() view returns (tuple(uint256 id, address seller, uint8 sellToken, uint256 amount, bool isActive, uint256 amountAsk)[])",
  "function marketPlaceGetUserOrders(address user) view returns (tuple(uint256 id, address seller, uint8 sellToken, uint256 amount, bool isActive, uint256 amountAsk)[])",
  "function marketPlaceIsActive() view returns (bool)",
  "function marketPlaceTakeOrder(uint256 landId, uint256 orderId)",
  "function maxSupply() view returns (uint256)",
  "function mint()",
  "function name() view returns (string)",
  "function nftNextTokenId() view returns (uint256)",
  "function owner() view returns (address owner_)",
  "function ownerOf(uint256 tokenId) view returns (address)",
  "function questCommit(uint256 landId, uint256 farmerSlotId)",
  "function questFinalize(uint256 landId, uint256 farmerSlotId) returns (bool success, uint8 rewardType, uint256 rewardAmount)",
  "function questGetByLandId(uint256 landId) view returns (tuple(uint8 difficulty, uint256 startBlock, uint256 endBlock, uint256 pseudoRndBlock, uint256 coolDownBlock)[] quests)",
  "function questStart(uint256 landId, uint8 difficultyLevel, uint256 farmerSlotId)",
  "function questStorageUpdate()",
  "function safeTransferFrom(address from, address to, uint256 tokenId)",
  "function setApprovalForAll(address operator, bool approved)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function symbol() view returns (string)",
  "function tokenOfOwnerByIndex(address owner, uint256 index) view returns (uint256)",
  "function tokenURI(uint256 tokenId) view returns (string)",
  "function tokensOfOwner(address owner) view returns (uint256[])",
  "function totalSupply() view returns (uint256)",
  "function townGetBuildingsByLandId(uint256 landId) view returns (tuple(uint8 id, uint8 level, uint8 maxLevel, uint256 blockHeightUpgradeInitiated, uint256 blockHeightUntilUpgradeDone, bool isUpgrading, uint256 levelUpgradeCostLeaf, uint256 levelUpgradeCostSeedInstant, uint256 levelUpgradeBlockInterval)[] townBuildings)",
  "function townSpeedUpWithSeed(uint256 landId, uint8 buildingId)",
  "function townStorageUpdate()",
  "function townUpgradeWithLeaf(uint256 landId, uint8 buildingId)",
  "function transfer(address to, uint256 tokenId) returns (bool success)",
  "function transferFrom(address from, address to, uint256 tokenId)",
  "function transferOwnership(address _newOwner)",
  "function villageClaimProduction(uint256 landId, uint8 buildingId)",
  "function villageGetVillageBuildingsByLandId(uint256 landId) view returns (tuple(uint8 id, uint8 level, uint8 maxLevel, uint256 blockHeightUpgradeInitiated, uint256 blockHeightUntilUpgradeDone, uint256 accumulatedPoints, uint256 accumulatedLifetime, bool isUpgrading, uint256 levelUpgradeCostLeaf, uint256 levelUpgradeCostSeedInstant, uint256 levelUpgradeBlockInterval, uint256 productionRatePlantLifetimePerDay, uint256 productionRatePlantPointsPerDay, uint256 claimedBlockHeight)[] villageBuildings)",
  "function villageSpeedUpWithSeed(uint256 landId, uint8 buildingId)",
  "function villageStorageUpdate()",
  "function villageUpgradeWithLeaf(uint256 landId, uint8 buildingId)",
  "function wareHouseAssignLifeTime(uint256 _landId, uint256 _plantId, uint256 _lifetime) returns (uint256 _newLifetime)",
  "function wareHouseAssignPlantPoints(uint256 _landId, uint256 _plantId, uint256 _addedPoints) returns (uint256 _newPlantPoints)",
  "event PlantLifetimeAssigned(uint256 indexed landId, uint256 indexed plantId, uint256 lifetime, uint256 newLifetime)",
  "event PlantPointsAssigned(uint256 indexed landId, uint256 indexed plantId, uint256 addedPoints, uint256 newPlantPoints)",
  "event log(string)",
  "event log_address(address)",
  "event log_array(address[] val)",
  "event log_bytes(bytes)",
  "event log_bytes32(bytes32)",
  "event log_int(int256)",
  "event log_named_address(string key, address val)",
  "event log_named_array(string key, address[] val)",
  "event log_named_bytes(string key, bytes val)",
  "event log_named_bytes32(string key, bytes32 val)",
  "event log_named_decimal_int(string key, int256 val, uint256 decimals)",
  "event log_named_decimal_uint(string key, uint256 val, uint256 decimals)",
  "event log_named_int(string key, int256 val)",
  "event log_named_string(string key, string val)",
  "event log_named_uint(string key, uint256 val)",
  "event log_string(string)",
  "event log_uint(uint256)",
  "event logs(bytes)",
  "event Approval(address indexed owner, address indexed spender, uint256 value)",
  "event Transfer(address indexed from, address indexed to, uint256 value)",
  "event VillageProductionClaimed(uint256 indexed landId, uint8 indexed buildingId)",
  "event VillageProductionXPClaimCooldownActive(uint256 indexed landId, uint256 indexed buildingId, uint256 currentTime, uint256 cooldownEndTime)",
  "event VillageProductionXPClaimed(uint256 indexed landId, uint256 indexed buildingId, uint256 claimTime, uint256 xpAwarded)",
  "event VillageSpeedUpWithSeed(uint256 indexed landId, uint8 indexed buildingId, uint256 speedUpCost, uint256 xp)",
  "event VillageUpgradedWithLeaf(uint256 indexed landId, uint8 indexed buildingId, uint256 upgradeCost, uint256 xp)",
  "event TownSpeedUpWithSeed(uint256 indexed landId, uint8 indexed buildingId, uint256 speedUpCost, uint256 xp)",
  "event TownUpgradedWithLeaf(uint256 indexed landId, uint8 indexed buildingId, uint256 upgradeCost, uint256 xp)",
  "event SlotFound(address who, bytes4 fsig, bytes32 keysHash, uint256 slot)",
  "event WARNING_UninitedSlot(address who, uint256 slot)",
  "event QuestCommitted(uint256 indexed landId, uint256 indexed farmerSlotId, uint256 pseudoRndBlock)",
  "event QuestFinalized(uint256 indexed landId, uint256 indexed farmerSlotId, address indexed player, uint8 rewardType, uint256 amount)",
  "event QuestReset(uint256 indexed landId, uint256 indexed farmerSlotId, address indexed player)",
  "event QuestStarted(uint256 indexed landId, uint256 indexed farmerSlotId, uint8 difficulty, uint256 startBlock, uint256 endBlock)",
  "event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)",
  "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
  "event Initialized(uint64 version)",
  "event LandMinted(address indexed to, uint256 tokenId, uint256 mintPrice)",
  "event OrderCancelled(uint256 orderId, address seller)",
  "event OrderCreated(uint256 orderId, address seller, uint8 sellToken, uint256 amount, uint256 amountAsk)",
  "event OrderTaken(uint256 orderId, address buyer)",
  "event WareHouseLifetimeAssigned(uint256 indexed landId, uint256 indexed plantId, uint256 lifetime, uint256 newLifetime)",
  "event WareHousePlantPointsAssigned(uint256 indexed landId, uint256 indexed plantId, uint256 addedPoints, uint256 newPlantPoints)",
  "event DiamondCut(tuple(address facetAddress, uint8 action, bytes4[] functionSelectors)[] _diamondCut, address _init, bytes _calldata)",
  "event LandNameChanged(uint256 indexed tokenId, string name)",
  "event InitializeDiamond(address sender)",
  "error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner)",
  "error ERC721InsufficientApproval(address operator, uint256 tokenId)",
  "error ERC721InvalidApprover(address approver)",
  "error ERC721InvalidOperator(address operator)",
  "error ERC721InvalidOwner(address owner)",
  "error ERC721InvalidReceiver(address receiver)",
  "error ERC721InvalidSender(address sender)",
  "error ERC721NonexistentToken(uint256 tokenId)",
  "error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed)",
  "error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed)",
  "error ERC20InvalidApprover(address approver)",
  "error ERC20InvalidReceiver(address receiver)",
  "error ERC20InvalidSender(address sender)",
  "error ERC20InvalidSpender(address spender)",
  "error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId)",
  "error ERC1155InvalidApprover(address approver)",
  "error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength)",
  "error ERC1155InvalidOperator(address operator)",
  "error ERC1155InvalidReceiver(address receiver)",
  "error ERC1155InvalidSender(address sender)",
  "error ERC1155MissingApprovalForAll(address operator, address owner)",
  "error AccessControlNotOwnerOrApproved()",
  "error AccessControlNotWhitelisted()",
  "error AccessControlPaused()",
  "error AccessControlTokenDoesNotExist()",
  "error AmountMustBeGreaterThanZero()",
  "error InsufficientAllowance()",
  "error InsufficientBalance(uint256 balance, uint256 needed)",
  "error SafeERC20FailedOperation(address token)",
  "error StringsInsufficientHexLength(uint256 value, uint256 length)",
  "error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease)",
  "error SafeCastOverflowedIntDowncast(uint8 bits, int256 value)",
  "error SafeCastOverflowedIntToUint(int256 value)",
  "error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value)",
  "error SafeCastOverflowedUintToInt(uint256 value)",
  "error AccessControlCallerMustBeAdmin()",
  "error ERC721EnumerableForbiddenBatchMint()",
  "error ERC721OutOfBoundsIndex(address owner, uint256 index)",
  "error InvalidInitialization()",
  "error MintControlMintNotActive()",
  "error NFTCoordinateOccupied(int256 x, int256 y)",
  "error NFTCoordinateOutOfBounds(int256 coordinate, string axis)",
  "error NotInitializing()",
  "error AlreadyInitialized(uint256 currentVersion, uint256 newVersion)",
  "error FailedCall()",
  "error FailedDeployment()",
  "error MissingPrecompile(address)",
  "error InitializationFunctionReverted(address _initializationContractAddress, bytes _calldata)",
  "error AddressEmptyCode(address target)"
]